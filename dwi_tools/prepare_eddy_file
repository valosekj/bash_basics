#!/bin/bash

# Create a text file for FSL's eddy function
# The text file tells eddy which line(s) in the topup.txt file is/are relevant for the data passed into eddy
# The text file carries information about positions of b=0 scans which eddy uses for artifacts correction.
# For example, if we have following bval file:
#       0 1000 1000 0 3000 3000 0 1000 1000
# Then, the text file will look like:
#       1 1 1 2 2 2 3 3 3

# NOTE - if two same DWI acquisitions only with opposite PE are acquired, merge bval files first, for example by merge_bval_files
# For details see last question here - https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/eddy/Faq#What_does_it_mean_if_I_have_more_than_two_rows_in_my_--acqp_file.3F

# NOTE from FSL about "--imain" input file for eddy:
# Should specify a 4D image file with all your images acquired as part of a diffusion protocol. I.e. it should contain both your dwis and your b=0 images.
# If you have collected your data with reversed phase-encode blips, data for both blip-directions should be in this file.

# Jan Valosek, fMRI laboratory Olomouc, Czechia, 2021

if [[ $# -eq 0 ]] || [[ $1 =~ "-h" ]];then
    echo -e "Create a text file for FSL's eddy function."
    echo -e "The text file tells eddy which line(s) in the topup.txt file is/are relevant for the data passed into eddy."
    echo -e "The text file carries information about positions of b=0 scans which eddy uses for artifacts correction."
    echo -e "For example, if we have following bval file:\n\t0 1000 1000 0 3000 3000 0 1000 1000"
    echo -e "Then, the text file will look like:\n\t1 1 1 2 2 2 3 3 3"
    echo -e "NOTE - if two same DWI acquisitions only with opposite PE are acquired, merge bval files first, for example by merge_bval_bvec_files function"
    echo -e "\nUSAGE:\n\t${0##*/} <bval_file>"
    echo -e "EXAMPLE:\n\t${0##*/} dti_merged.bval"
    exit
fi

# Uncomment for debug
#set -x

# Immediately exit if error
set -e -o pipefail

# Global variables
output_file_name="index.txt"    # filename for output text file
input_file=${1}
output=""
b0_index=0

# Check if input file contains .bval suffix (bval or bvals)
if [[ ! ${input_file#*.} =~ "bval" ]];then echo "ERROR: Input file must be a text file containing b-values with .bval or .bvals suffix.";exit;fi

for bval in $(cat ${input_file});do
    # Increment b0_index with each new b0
    if [[ $bval -eq 0 ]];then
        b0_index=$(($b0_index+1));
    fi;
    output="$output $b0_index";
done
# save output variable into file
echo ${output} > ${output_file_name}

echo -e "Created ${output_file_name}:\n$(cat ${output_file_name})"
echo -e "${0##*/} finished\n"
